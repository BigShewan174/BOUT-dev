#!/usr/bin/env python3

# 
# Run the test, compare results against the benchmark
#

# Variables to compare
tol = 4e-12                  # Absolute tolerance

from boututils.run_wrapper import shell, shell_safe, launch_safe, getmpirun
from boutdata.collect import collect
import numpy as np
from sys import stdout, exit

MPIRUN = getmpirun()

vars = ["check", "check2"]

print("Making LaplaceXY inversion test")
shell_safe("make > make.log")

print("Running LaplaceXY inversion test")
success = True

nproc = 8 # Need multiples of 8 for DIII-D grid to split correctly in y-direction

cmd = "./test-laplacexy"

shell("rm data/BOUT.dmp.*.nc")

print("   %d processors...." % nproc)
s, out = launch_safe(cmd, runcmd=MPIRUN, nproc=nproc, pipe=True)
with open("run.log", "w") as f:
    f.write(out)

# Collect output data
for v in vars:
    stdout.write("      Checking variable "+v+" ... ")
    result = collect(v, path="data", info=False, xguards=False, yguards=False)
    # result contains difference between differential operator applied to solution and rhs
    # It should be small, check for maximum error:
    diff =  np.max(np.abs(result))
    if diff > tol:
      print("Fail, maximum difference = "+str(diff))
      success = False
    else:
      print("Pass")

if success:
  print(" => All LaplaceXY inversion tests passed")
  exit(0)
else:
  print(" => Some failed tests")
  exit(1)
